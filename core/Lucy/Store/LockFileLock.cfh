/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

parcel Lucy;

class Lucy::Store::LockFileLock nickname LFLock
    inherits Lucy::Store::Lock {

    String *host;
    String *lock_path;
    String *shared_lock_path;
    String *link_path;
    int     state;
    bool    exclusive_only;

    inert incremented LockFileLock*
    new(Folder *folder, String *name, String *host, int32_t timeout = 0,
        int32_t interval = 100, bool exclusive_only);

    public inert LockFileLock*
    init(LockFileLock *self, Folder *folder, String *name, String *host,
         int32_t timeout = 0, int32_t interval = 100, bool exclusive_only);

    public bool
    Request_Shared(LockFileLock *self);

    public bool
    Request_Exclusive(LockFileLock *self);

    public void
    Release(LockFileLock *self);

    public void
    Release_And_Delete(LockFileLock *self);

    public void
    Destroy(LockFileLock *self);
}



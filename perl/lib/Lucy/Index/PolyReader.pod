# ***********************************************
# 
# !!!! DO NOT EDIT !!!!
# 
# This file was auto-generated by Build.PL.
# 
# ***********************************************
# 
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

=encoding utf8

=head1 NAME

Lucy::Index::PolyReader - Multi-segment implementation of IndexReader.

=head1 SYNOPSIS

    my $polyreader = Lucy::Index::IndexReader->open( 
        index => '/path/to/index',
    );
    my $doc_reader = $polyreader->obtain("Lucy::Index::DocReader");
    for my $doc_id ( 1 .. $polyreader->doc_max ) {
        my $doc = $doc_reader->fetch_doc($doc_id);
        print " $doc_id: $doc->{title}\n";
    }

=head1 DESCRIPTION

PolyReader conflates index data from multiple segments.  For instance, if
an index contains three segments with 10 documents each, PolyReader’s
L<doc_max()|Lucy::Index::IndexReader/doc_max> method will return 30.

Some of PolyReader’s L<DataReader|Lucy::Index::DataReader> components
may be less efficient or complete than the single-segment implementations
accessed via L<SegReader|Lucy::Index::SegReader>.

=head1 METHODS

=head2 doc_max

    $poly_reader->doc_max();

Return the maximum number of documents available to the reader, which
is also the highest possible internal document id.  Documents which
have been marked as deleted but not yet purged from the index are
included in this count.

=head2 doc_count

    $poly_reader->doc_count();

Return the number of documents available to the reader, subtracting
any that are marked as deleted.

=head2 del_count

    $poly_reader->del_count();

Return the number of documents which have been marked as deleted but
not yet purged from the index.

=head2 _offsets

    $poly_reader->_offsets();

Return an array with one entry for each segment, corresponding to
segment doc_id start offset.

=head2 seg_readers

    $poly_reader->seg_readers();

Return an array of all the SegReaders represented within the
IndexReader.

=head1 INHERITANCE

Lucy::Index::PolyReader isa L<Lucy::Index::IndexReader> isa L<Lucy::Index::DataReader> isa Clownfish::Obj.

=cut


# ***********************************************
# 
# !!!! DO NOT EDIT !!!!
# 
# This file was auto-generated by Build.PL.
# 
# ***********************************************
# 
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

=encoding utf8

=head1 NAME

Lucy::Search::IndexSearcher - Execute searches against a single index.

=head1 SYNOPSIS

    my $searcher = Lucy::Search::IndexSearcher->new( 
        index => '/path/to/index' 
    );
    my $hits = $searcher->hits(
        query      => 'foo bar',
        offset     => 0,
        num_wanted => 100,
    );

=head1 DESCRIPTION

Use the IndexSearcher class to perform search queries against an index.
(For searching multiple indexes at once, see
L<PolySearcher|Lucy::Search::PolySearcher>).

IndexSearchers operate against a single point-in-time view or
L<Snapshot|Lucy::Index::Snapshot> of the index.  If an index is
modified, a new IndexSearcher must be opened to access the changes.

=head1 CONSTRUCTORS

=head2 new

    my $searcher = Lucy::Search::IndexSearcher->new( 
        index => '/path/to/index' 
    );

=over

=item *

B<index> - Either a string filepath, a Folder, or an IndexReader.

=back

=head1 METHODS

=head2 doc_max

    $index_searcher->doc_max();

Return the maximum number of docs in the collection represented by the
Searcher, which is also the highest possible internal doc id.
Documents which have been marked as deleted but not yet purged are
included in this count.

=head2 doc_freq

    $index_searcher->doc_freq(
        field => $string,  # required
        term  => $obj,     # required
    );

Return the number of documents which contain the term in the given
field.

=over

=item *

B<field> - Field name.

=item *

B<term> - The term to look up.

=back

=head2 collect

    $index_searcher->collect(
        query     => $query,      # required
        collector => $collector,  # required
    );

Iterate over hits, feeding them into a
L<Collector|Lucy::Search::Collector>.

=over

=item *

B<query> - A Query.

=item *

B<collector> - A Collector.

=back

=head2 fetch_doc

    $index_searcher->fetch_doc($doc_id);

Retrieve a document.  Throws an error if the doc id is out of range.

=over

=item *

B<doc_id> - A document id.

=back

=head2 get_reader

    $index_searcher->get_reader();

Accessor for the objectâ€™s C<reader> member.

=head1 INHERITANCE

Lucy::Search::IndexSearcher isa L<Lucy::Search::Searcher> isa Clownfish::Obj.

=cut


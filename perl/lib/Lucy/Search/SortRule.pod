# ***********************************************
# 
# !!!! DO NOT EDIT !!!!
# 
# This file was auto-generated by Build.PL.
# 
# ***********************************************
# 
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

=encoding utf8

=head1 NAME

Lucy::Search::SortRule - Element of a SortSpec.

=head1 SYNOPSIS

    my $sort_spec = Lucy::Search::SortSpec->new(
        rules => [
            Lucy::Search::SortRule->new( field => 'date' ),
            Lucy::Search::SortRule->new( type  => 'doc_id' ),
        ],
    );

=head1 DESCRIPTION

SortRules are the building blocks used to assemble
L<SortSpecs|Lucy::Search::SortSpec>; each SortRule defines a single
level of sorting.  For example, sorting first by “category” then by score
requires a SortSpec with two SortRule elements.

=head1 CONSTRUCTORS

=head2 new

    my $by_title   = Lucy::Search::SortRule->new( field => 'title' );
    my $by_score   = Lucy::Search::SortRule->new( type  => 'score' );
    my $by_doc_id  = Lucy::Search::SortRule->new( type  => 'doc_id' );
    my $reverse_date = Lucy::Search::SortRule->new(
        field   => 'date',
        reverse => 1,
    );

=over

=item *

B<type> - Indicate whether to sort by score, field, etc.  (The
default is to sort by a field.)

=item *

B<field> - The name of a C<sortable> field.

=item *

B<reverse> - If true, reverse the order of the sort for this rule.

=back

=head1 METHODS

=head2 get_field

    $sort_rule->get_field();

Accessor for “field” member.

=head2 get_type

    $sort_rule->get_type();

Accessor for “type” member.

=head2 get_reverse

    $sort_rule->get_reverse();

Accessor for “reverse” member.

=head1 INHERITANCE

Lucy::Search::SortRule isa Clownfish::Obj.

=cut


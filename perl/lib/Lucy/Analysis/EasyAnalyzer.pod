# ***********************************************
# 
# !!!! DO NOT EDIT !!!!
# 
# This file was auto-generated by Build.PL.
# 
# ***********************************************
# 
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

=encoding utf8

=head1 NAME

Lucy::Analysis::EasyAnalyzer - A simple analyzer chain.

=head1 SYNOPSIS

    my $schema = Lucy::Plan::Schema->new;
    my $analyzer = Lucy::Analysis::EasyAnalyzer->new(
        language => 'en',
    );
    my $type = Lucy::Plan::FullTextType->new(
        analyzer => $analyzer,
    );
    $schema->spec_field( name => 'title',   type => $type );
    $schema->spec_field( name => 'content', type => $type );

=head1 DESCRIPTION

EasyAnalyzer is an analyzer chain consisting of a
L<StandardTokenizer|Lucy::Analysis::StandardTokenizer>, a
L<Normalizer|Lucy::Analysis::Normalizer>, and a
L<SnowballStemmer|Lucy::Analysis::SnowballStemmer>.

Supported languages:

    en => English,
    da => Danish,
    de => German,
    es => Spanish,
    fi => Finnish,
    fr => French,
    hu => Hungarian,
    it => Italian,
    nl => Dutch,
    no => Norwegian,
    pt => Portuguese,
    ro => Romanian,
    ru => Russian,
    sv => Swedish,
    tr => Turkish,

=head1 CONSTRUCTORS

=head2 new

    my $analyzer = Lucy::Analysis::EasyAnalyzer->new(
        language  => 'es',
    );

=over

=item *

B<language> - An ISO code from the list of supported languages.

=back

=head1 METHODS

=head2 transform

    $easy_analyzer->transform($inversion);

Take a single L<Inversion|Lucy::Analysis::Inversion> as input
and returns an Inversion, either the same one (presumably transformed
in some way), or a new one.

=over

=item *

B<inversion> - An inversion.

=back

=head1 INHERITANCE

Lucy::Analysis::EasyAnalyzer isa L<Lucy::Analysis::Analyzer> isa Clownfish::Obj.

=cut

